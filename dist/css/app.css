/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
.size-largest {
  font-size: 2rem !important; }

.size-larger {
  font-size: 1.5rem !important; }

.size-normal {
  font-size: 1rem !important; }

.size-smaller {
  font-size: 0.625rem !important; }

.size-small {
  font-size: 0.625rem !important; }

.size-extra-small {
  font-size: 0.5rem !important; }

.has-text-align-center {
  text-align: center; }

.is-fullheight {
  height: 100%; }

.has-text-weight-bold {
  font-weight: bold; }

/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
.size-largest {
  font-size: 2rem !important; }

.size-larger {
  font-size: 1.5rem !important; }

.size-normal {
  font-size: 1rem !important; }

.size-smaller {
  font-size: 0.625rem !important; }

.size-small {
  font-size: 0.625rem !important; }

.size-extra-small {
  font-size: 0.5rem !important; }

.has-text-align-center {
  text-align: center; }

.is-fullheight {
  height: 100%; }

.has-text-weight-bold {
  font-weight: bold; }

@media screen and (min-width: 1025px) {
  html, body {
    overflow: hidden; } }

.view {
  display: flex;
  flex-direction: column;
  height: 100%;
  max-height: 100%; }
  .view > .view-content {
    flex-grow: 1;
    flex-shrink: 1;
    overflow-y: auto;
    height: 100%;
    width: 100%;
    margin: 0 auto; }

a[href] {
  color: #3F51B5; }
  a[href]:hover {
    color: #3949AB; }

/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
.size-largest[data-v-3b78b493] {
  font-size: 2rem !important;
}
.size-larger[data-v-3b78b493] {
  font-size: 1.5rem !important;
}
.size-normal[data-v-3b78b493] {
  font-size: 1rem !important;
}
.size-smaller[data-v-3b78b493] {
  font-size: 0.625rem !important;
}
.size-small[data-v-3b78b493] {
  font-size: 0.625rem !important;
}
.size-extra-small[data-v-3b78b493] {
  font-size: 0.5rem !important;
}
.has-text-align-center[data-v-3b78b493] {
  text-align: center;
}
.is-fullheight[data-v-3b78b493] {
  height: 100%;
}
.has-text-weight-bold[data-v-3b78b493] {
  font-weight: bold;
}
.weapon[data-v-3b78b493] {
  display: inline-flex;
  align-items: center;
  position: relative;
}
.weapon .weapon-tag[data-v-3b78b493] {
    display: inline-flex;
    font-size: 0.875em;
    margin-left: 0.5em;
}
.weapon .weapon-tag .content[data-v-3b78b493] {
      opacity: 0.65;
}
.weapon .weapon-tag .bar[data-v-3b78b493] {
      opacity: 0.85;
}
.weapon .weapon-tag + .weapon-tag[data-v-3b78b493] {
      margin-left: 0.25em;
}
.weapon .hover-unselect-icon[data-v-3b78b493] {
    display: none;
    justify-content: center;
    align-items: center;
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    width: 1em;
    height: 1em;
    -webkit-transform: translateX(-100%);
            transform: translateX(-100%);
    color: #E57373;
    background-color: #FFEBEE;
}
.weapon .hover-unselect-icon[data-v-3b78b493]:hover {
      color: #E53935;
      background-color: #FFCDD2;
}
.weapon .alt-mode[data-v-3b78b493] {
    opacity: 0.75;
}
.weapon .handedness[data-v-3b78b493] {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 1em;
    height: 1em;
}
.weapon .handedness .handedness-icon[data-v-3b78b493] {
      position: absolute;
      width: 1em;
      height: 1em;
      left: 0;
      right: 0;
}
.weapon .handedness .handedness-number[data-v-3b78b493] {
      z-index: 1;
      font-size: 10px;
      color: #ffffff;
}
.weapon.is-hoverable[data-v-3b78b493]:hover {
    background-color: #EEEEEE;
    cursor: pointer;
}
.weapon.is-hoverable:hover .hover-unselect-icon[data-v-3b78b493] {
      display: flex;
}

/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
.size-largest[data-v-17ec623e] {
  font-size: 2rem !important;
}
.size-larger[data-v-17ec623e] {
  font-size: 1.5rem !important;
}
.size-normal[data-v-17ec623e] {
  font-size: 1rem !important;
}
.size-smaller[data-v-17ec623e] {
  font-size: 0.625rem !important;
}
.size-small[data-v-17ec623e] {
  font-size: 0.625rem !important;
}
.size-extra-small[data-v-17ec623e] {
  font-size: 0.5rem !important;
}
.has-text-align-center[data-v-17ec623e] {
  text-align: center;
}
.is-fullheight[data-v-17ec623e] {
  height: 100%;
}
.has-text-weight-bold[data-v-17ec623e] {
  font-weight: bold;
}
.attribute-bar-container[data-v-17ec623e] {
  font-size: 0.85rem;
}
.attribute-bar-container.red .attribute-bar[data-v-17ec623e] {
    color: #ffffff;
    background-color: #C62828;
}
.attribute-bar-container.red .title-overflown[data-v-17ec623e] {
    color: #C62828;
}
.attribute-bar-container.green .attribute-bar[data-v-17ec623e] {
    color: #ffffff;
    background-color: #2E7D32;
}
.attribute-bar-container.green .title-overflown[data-v-17ec623e] {
    color: #2E7D32;
}
.attribute-bar-container.blue .attribute-bar[data-v-17ec623e] {
    color: #ffffff;
    background-color: #1565C0;
}
.attribute-bar-container.blue .title-overflown[data-v-17ec623e] {
    color: #1565C0;
}
.attribute-bar-container .attribute-bar-wrapper[data-v-17ec623e] {
    border: 1px solid #E0E0E0;
}
.attribute-bar-container .attribute-bar-wrapper[data-v-17ec623e]:not(:last-child) {
      border-bottom: none;
}
.attribute-bar-container .attribute-bar .title-wrapper[data-v-17ec623e] {
    position: relative;
    white-space: nowrap;
}
.attribute-bar-container .attribute-bar .title-wrapper .title[data-v-17ec623e] {
      display: flex;
}
.attribute-bar-container .attribute-bar .title-wrapper .title .title-prefix[data-v-17ec623e] {
        flex: 0;
        display: inline-block;
        padding: 0 0.25em;
        opacity: 0.75;
}
.attribute-bar-container .attribute-bar .title-wrapper .title .title-content[data-v-17ec623e] {
        flex: 1;
        text-align: center;
}
.attribute-bar-container .attribute-bar .title-wrapper .title-primary[data-v-17ec623e] {
      position: relative;
      z-index: 2;
      overflow: hidden;
      max-width: 100%;
}
.attribute-bar-container .attribute-bar .title-wrapper .title-overflown[data-v-17ec623e] {
      position: absolute;
      z-index: 1;
      left: 0;
      top: 0;
}

/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
/*
    Generates root-level selectors for a component variant.
    Example:
    component-variant(('is-foo', 'is-danger'), '.component') {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger,
    
    // Primary selector present in apply, secondary selectors used in inner components 
    .apply-is-foo .component.is-danger {
        foo: bar; 
    }

*/
/*
    Generates root-level selectors for multiple component variants. 
    Example:
    component-variants(
        (('is-foo', 'is-danger'), '.component'),
        (('is-bar', 'is-danger'), '.component'),    
    ) {
        foo: bar;
    }    

    output:
    .apply-is-foo.apply-is-danger .component, 
    .component.is-foo.is-danger, 
    .apply-is-bar.apply-is-danger .component, 
    .component.is-bar.is-danger {
        foo: bar; 
    }
*/
/* Material design color: red */
/* Material design color: pink */
/* Material design color: purple */
/* Material design color: deep-purple */
/* Material design color: indigo */
/* Material design color: blue */
/* Material design color: light-blue */
/* Material design color: cyan */
/* Material design color: teal */
/* Material design color: green */
/* Material design color: light-green */
/* Material design color: lime */
/* Material design color: yellow */
/* Material design color: amber */
/* Material design color: orange */
/* Material design color: deep-orange */
/* Material design color: brown */
/* Material design color: grey */
/* Material design color: blue-grey */
.size-largest[data-v-0a6dfb62] {
  font-size: 2rem !important;
}
.size-larger[data-v-0a6dfb62] {
  font-size: 1.5rem !important;
}
.size-normal[data-v-0a6dfb62] {
  font-size: 1rem !important;
}
.size-smaller[data-v-0a6dfb62] {
  font-size: 0.625rem !important;
}
.size-small[data-v-0a6dfb62] {
  font-size: 0.625rem !important;
}
.size-extra-small[data-v-0a6dfb62] {
  font-size: 0.5rem !important;
}
.has-text-align-center[data-v-0a6dfb62] {
  text-align: center;
}
.is-fullheight[data-v-0a6dfb62] {
  height: 100%;
}
.has-text-weight-bold[data-v-0a6dfb62] {
  font-weight: bold;
}
.loading-message[data-v-0a6dfb62] {
  color: #ffffff;
  background-color: #212121;
  font-size: 1.5rem;
  padding: 1rem;
  position: fixed;
  width: 75%;
  top: 50%;
  left: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
          transform: translateX(-50%) translateY(-50%);
}
.app-header[data-v-0a6dfb62] {
  display: flex;
  background-color: #212121;
}
.app-header a[href][data-v-0a6dfb62] {
    color: #FAFAFA;
}
.app-header .mordhau-logo[data-v-0a6dfb62] {
    flex-basis: 256px;
    flex-shrink: 0;
    position: relative;
}
.app-header .mordhau-logo[data-v-0a6dfb62]:hover {
      cursor: pointer;
}
.app-header .mordhau-logo .subtitle[data-v-0a6dfb62] {
      position: absolute;
      left: 2rem;
      bottom: 0;
      color: #BDBDBD;
}
.app-header .author[data-v-0a6dfb62] {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    flex: 1;
    text-align: right;
    flex-basis: auto;
    align-items: flex-end;
    padding-right: 0.75rem;
    color: #BDBDBD;
    font-size: 0.75rem;
}
.columns[data-v-0a6dfb62] {
  padding: 0.5rem !important;
}
.weapon-list[data-v-0a6dfb62] {
  border: 1px solid #E0E0E0;
}
.selected-weapons-list-wrapper[data-v-0a6dfb62] {
  border-bottom: 1px solid #E0E0E0;
}
@media screen and (min-width: 769px) {
.columns[data-v-0a6dfb62] {
    padding: 0 !important;
    max-height: 100%;
    min-height: 100%;
}
.weapons-column[data-v-0a6dfb62] {
    padding: 0.5rem !important;
}
.stats-column[data-v-0a6dfb62] {
    padding: 0.5rem !important;
    border-left: 1px solid #E0E0E0;
}
}
.selected-weapons-list-wrapper[data-v-0a6dfb62] {
  display: flex;
  align-items: center;
}
.selected-weapons-list[data-v-0a6dfb62] {
  flex: 1;
  margin-bottom: 0.5rem;
}
.selected-weapons-list .items[data-v-0a6dfb62] {
    max-height: 8rem;
    overflow-y: auto;
}
.selected-weapons-list .items .item[data-v-0a6dfb62] {
      display: inline-flex;
      align-items: center;
      white-space: nowrap;
      font-size: 0.85rem;
      margin: 0.25rem;
      padding-left: 0.25rem;
      padding-right: 0.5rem;
      padding-top: 0.25rem;
      padding-bottom: 0.25rem;
      color: #F5F5F5;
      background-color: #424242;
}
.selected-weapons-list .items .item[data-v-0a6dfb62]:hover {
        background-color: #212121;
}
.selected-weapons-list .items .item .unselect[data-v-0a6dfb62] {
        margin-right: 0.25rem;
        color: #E57373;
}
.selected-weapons-list .items .item .unselect[data-v-0a6dfb62]:hover {
          color: #F44336;
          cursor: pointer;
}
@media screen and (min-width: 1025px) {
.stats-column .attribute-bars[data-v-0a6dfb62] {
    max-width: 600px;
}
}
.data-copyright[data-v-0a6dfb62] {
  font-size: 0.85rem;
  padding: 0.5rem;
  border-top: 1px solid #E0E0E0;
  background-color: #212121;
  color: #BDBDBD;
}
.data-copyright a[href][data-v-0a6dfb62] {
    color: #FAFAFA;
}


/*# sourceMappingURL=app.css.map*/